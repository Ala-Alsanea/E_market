///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class StoresAttributesCoverDataAttributesFormatsSmall {
/*
{
  "name": "small_Xenon_Cover.jpg",
  "hash": "small_Xenon_Cover_3d50192fb0",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "path": null,
  "width": 500,
  "height": 192,
  "size": 10.28,
  "url": "/uploads/small_Xenon_Cover_3d50192fb0.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  String? path;
  int? width;
  int? height;
  double? size;
  String? url;

  StoresAttributesCoverDataAttributesFormatsSmall({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.path,
    this.width,
    this.height,
    this.size,
    this.url,
  });
  StoresAttributesCoverDataAttributesFormatsSmall.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    path = json['path']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['path'] = path;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['url'] = url;
    return data;
  }
}

class StoresAttributesCoverDataAttributesFormatsMedium {
/*
{
  "name": "medium_Xenon_Cover.jpg",
  "hash": "medium_Xenon_Cover_3d50192fb0",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "path": null,
  "width": 750,
  "height": 288,
  "size": 18.53,
  "url": "/uploads/medium_Xenon_Cover_3d50192fb0.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  String? path;
  int? width;
  int? height;
  double? size;
  String? url;

  StoresAttributesCoverDataAttributesFormatsMedium({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.path,
    this.width,
    this.height,
    this.size,
    this.url,
  });
  StoresAttributesCoverDataAttributesFormatsMedium.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    path = json['path']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['path'] = path;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['url'] = url;
    return data;
  }
}

class StoresAttributesCoverDataAttributesFormatsThumbnail {
/*
{
  "name": "thumbnail_Xenon_Cover.jpg",
  "hash": "thumbnail_Xenon_Cover_3d50192fb0",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "path": null,
  "width": 245,
  "height": 94,
  "size": 3.87,
  "url": "/uploads/thumbnail_Xenon_Cover_3d50192fb0.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  String? path;
  int? width;
  int? height;
  double? size;
  String? url;

  StoresAttributesCoverDataAttributesFormatsThumbnail({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.path,
    this.width,
    this.height,
    this.size,
    this.url,
  });
  StoresAttributesCoverDataAttributesFormatsThumbnail.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    path = json['path']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['path'] = path;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['url'] = url;
    return data;
  }
}

class StoresAttributesCoverDataAttributesFormats {
/*
{
  "thumbnail": {
    "name": "thumbnail_Xenon_Cover.jpg",
    "hash": "thumbnail_Xenon_Cover_3d50192fb0",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "path": null,
    "width": 245,
    "height": 94,
    "size": 3.87,
    "url": "/uploads/thumbnail_Xenon_Cover_3d50192fb0.jpg"
  },
  "medium": {
    "name": "medium_Xenon_Cover.jpg",
    "hash": "medium_Xenon_Cover_3d50192fb0",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "path": null,
    "width": 750,
    "height": 288,
    "size": 18.53,
    "url": "/uploads/medium_Xenon_Cover_3d50192fb0.jpg"
  },
  "small": {
    "name": "small_Xenon_Cover.jpg",
    "hash": "small_Xenon_Cover_3d50192fb0",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "path": null,
    "width": 500,
    "height": 192,
    "size": 10.28,
    "url": "/uploads/small_Xenon_Cover_3d50192fb0.jpg"
  }
} 
*/

  StoresAttributesCoverDataAttributesFormatsThumbnail? thumbnail;
  StoresAttributesCoverDataAttributesFormatsMedium? medium;
  StoresAttributesCoverDataAttributesFormatsSmall? small;

  StoresAttributesCoverDataAttributesFormats({
    this.thumbnail,
    this.medium,
    this.small,
  });
  StoresAttributesCoverDataAttributesFormats.fromJson(
      Map<String, dynamic> json) {
    thumbnail = (json['thumbnail'] != null)
        ? StoresAttributesCoverDataAttributesFormatsThumbnail.fromJson(
            json['thumbnail'])
        : null;
    medium = (json['medium'] != null)
        ? StoresAttributesCoverDataAttributesFormatsMedium.fromJson(
            json['medium'])
        : null;
    small = (json['small'] != null)
        ? StoresAttributesCoverDataAttributesFormatsSmall.fromJson(
            json['small'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (thumbnail != null) {
      data['thumbnail'] = thumbnail!.toJson();
    }
    if (medium != null) {
      data['medium'] = medium!.toJson();
    }
    if (small != null) {
      data['small'] = small!.toJson();
    }
    return data;
  }
}

class StoresAttributesCoverDataAttributes {
/*
{
  "name": "Xenon_Cover.jpg",
  "alternativeText": "Xenon_Cover.jpg",
  "caption": "Xenon_Cover.jpg",
  "width": 832,
  "height": 320,
  "formats": {
    "thumbnail": {
      "name": "thumbnail_Xenon_Cover.jpg",
      "hash": "thumbnail_Xenon_Cover_3d50192fb0",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "path": null,
      "width": 245,
      "height": 94,
      "size": 3.87,
      "url": "/uploads/thumbnail_Xenon_Cover_3d50192fb0.jpg"
    },
    "medium": {
      "name": "medium_Xenon_Cover.jpg",
      "hash": "medium_Xenon_Cover_3d50192fb0",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "path": null,
      "width": 750,
      "height": 288,
      "size": 18.53,
      "url": "/uploads/medium_Xenon_Cover_3d50192fb0.jpg"
    },
    "small": {
      "name": "small_Xenon_Cover.jpg",
      "hash": "small_Xenon_Cover_3d50192fb0",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "path": null,
      "width": 500,
      "height": 192,
      "size": 10.28,
      "url": "/uploads/small_Xenon_Cover_3d50192fb0.jpg"
    }
  },
  "hash": "Xenon_Cover_3d50192fb0",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "size": 17.41,
  "url": "/uploads/Xenon_Cover_3d50192fb0.jpg",
  "previewUrl": null,
  "provider": "local",
  "provider_metadata": null,
  "createdAt": "2023-01-16T17:40:54.474Z",
  "updatedAt": "2023-01-16T17:40:54.474Z"
} 
*/

  String? name;
  String? alternativeText;
  String? caption;
  int? width;
  int? height;
  StoresAttributesCoverDataAttributesFormats? formats;
  String? hash;
  String? ext;
  String? mime;
  double? size;
  String? url;
  String? previewUrl;
  String? provider;
  String? providerMetadata;
  String? createdAt;
  String? updatedAt;

  StoresAttributesCoverDataAttributes({
    this.name,
    this.alternativeText,
    this.caption,
    this.width,
    this.height,
    this.formats,
    this.hash,
    this.ext,
    this.mime,
    this.size,
    this.url,
    this.previewUrl,
    this.provider,
    this.providerMetadata,
    this.createdAt,
    this.updatedAt,
  });
  StoresAttributesCoverDataAttributes.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    alternativeText = json['alternativeText']?.toString();
    caption = json['caption']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    formats = (json['formats'] != null)
        ? StoresAttributesCoverDataAttributesFormats.fromJson(json['formats'])
        : null;
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
    previewUrl = json['previewUrl']?.toString();
    provider = json['provider']?.toString();
    providerMetadata = json['provider_metadata']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['alternativeText'] = alternativeText;
    data['caption'] = caption;
    data['width'] = width;
    data['height'] = height;
    if (formats != null) {
      data['formats'] = formats!.toJson();
    }
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['size'] = size;
    data['url'] = url;
    data['previewUrl'] = previewUrl;
    data['provider'] = provider;
    data['provider_metadata'] = providerMetadata;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}

class StoresAttributesCoverData {
/*
{
  "id": 20,
  "attributes": {
    "name": "Xenon_Cover.jpg",
    "alternativeText": "Xenon_Cover.jpg",
    "caption": "Xenon_Cover.jpg",
    "width": 832,
    "height": 320,
    "formats": {
      "thumbnail": {
        "name": "thumbnail_Xenon_Cover.jpg",
        "hash": "thumbnail_Xenon_Cover_3d50192fb0",
        "ext": ".jpg",
        "mime": "image/jpeg",
        "path": null,
        "width": 245,
        "height": 94,
        "size": 3.87,
        "url": "/uploads/thumbnail_Xenon_Cover_3d50192fb0.jpg"
      },
      "medium": {
        "name": "medium_Xenon_Cover.jpg",
        "hash": "medium_Xenon_Cover_3d50192fb0",
        "ext": ".jpg",
        "mime": "image/jpeg",
        "path": null,
        "width": 750,
        "height": 288,
        "size": 18.53,
        "url": "/uploads/medium_Xenon_Cover_3d50192fb0.jpg"
      },
      "small": {
        "name": "small_Xenon_Cover.jpg",
        "hash": "small_Xenon_Cover_3d50192fb0",
        "ext": ".jpg",
        "mime": "image/jpeg",
        "path": null,
        "width": 500,
        "height": 192,
        "size": 10.28,
        "url": "/uploads/small_Xenon_Cover_3d50192fb0.jpg"
      }
    },
    "hash": "Xenon_Cover_3d50192fb0",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "size": 17.41,
    "url": "/uploads/Xenon_Cover_3d50192fb0.jpg",
    "previewUrl": null,
    "provider": "local",
    "provider_metadata": null,
    "createdAt": "2023-01-16T17:40:54.474Z",
    "updatedAt": "2023-01-16T17:40:54.474Z"
  }
} 
*/

  int? id;
  StoresAttributesCoverDataAttributes? attributes;

  StoresAttributesCoverData({
    this.id,
    this.attributes,
  });
  StoresAttributesCoverData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    attributes = (json['attributes'] != null)
        ? StoresAttributesCoverDataAttributes.fromJson(json['attributes'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    if (attributes != null) {
      data['attributes'] = attributes!.toJson();
    }
    return data;
  }
}

class StoresAttributesCover {
/*
{
  "data": {
    "id": 20,
    "attributes": {
      "name": "Xenon_Cover.jpg",
      "alternativeText": "Xenon_Cover.jpg",
      "caption": "Xenon_Cover.jpg",
      "width": 832,
      "height": 320,
      "formats": {
        "thumbnail": {
          "name": "thumbnail_Xenon_Cover.jpg",
          "hash": "thumbnail_Xenon_Cover_3d50192fb0",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "path": null,
          "width": 245,
          "height": 94,
          "size": 3.87,
          "url": "/uploads/thumbnail_Xenon_Cover_3d50192fb0.jpg"
        },
        "medium": {
          "name": "medium_Xenon_Cover.jpg",
          "hash": "medium_Xenon_Cover_3d50192fb0",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "path": null,
          "width": 750,
          "height": 288,
          "size": 18.53,
          "url": "/uploads/medium_Xenon_Cover_3d50192fb0.jpg"
        },
        "small": {
          "name": "small_Xenon_Cover.jpg",
          "hash": "small_Xenon_Cover_3d50192fb0",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "path": null,
          "width": 500,
          "height": 192,
          "size": 10.28,
          "url": "/uploads/small_Xenon_Cover_3d50192fb0.jpg"
        }
      },
      "hash": "Xenon_Cover_3d50192fb0",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "size": 17.41,
      "url": "/uploads/Xenon_Cover_3d50192fb0.jpg",
      "previewUrl": null,
      "provider": "local",
      "provider_metadata": null,
      "createdAt": "2023-01-16T17:40:54.474Z",
      "updatedAt": "2023-01-16T17:40:54.474Z"
    }
  }
} 
*/

  StoresAttributesCoverData? data;

  StoresAttributesCover({
    this.data,
  });
  StoresAttributesCover.fromJson(Map<String, dynamic> json) {
    data = (json['data'] != null)
        ? StoresAttributesCoverData.fromJson(json['data'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}

class StoresAttributesAvatarDataAttributesFormatsSmall {
/*
{
  "name": "small_Xenon.jpg",
  "hash": "small_Xenon_83fc8ae3e9",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "path": null,
  "width": 499,
  "height": 500,
  "size": 20.68,
  "url": "/uploads/small_Xenon_83fc8ae3e9.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  String? path;
  int? width;
  int? height;
  double? size;
  String? url;

  StoresAttributesAvatarDataAttributesFormatsSmall({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.path,
    this.width,
    this.height,
    this.size,
    this.url,
  });
  StoresAttributesAvatarDataAttributesFormatsSmall.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    path = json['path']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['path'] = path;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['url'] = url;
    return data;
  }
}

class StoresAttributesAvatarDataAttributesFormatsMedium {
/*
{
  "name": "medium_Xenon.jpg",
  "hash": "medium_Xenon_83fc8ae3e9",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "path": null,
  "width": 750,
  "height": 750,
  "size": 38.79,
  "url": "/uploads/medium_Xenon_83fc8ae3e9.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  String? path;
  int? width;
  int? height;
  double? size;
  String? url;

  StoresAttributesAvatarDataAttributesFormatsMedium({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.path,
    this.width,
    this.height,
    this.size,
    this.url,
  });
  StoresAttributesAvatarDataAttributesFormatsMedium.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    path = json['path']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['path'] = path;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['url'] = url;
    return data;
  }
}

class StoresAttributesAvatarDataAttributesFormatsLarge {
/*
{
  "name": "large_Xenon.jpg",
  "hash": "large_Xenon_83fc8ae3e9",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "path": null,
  "width": 999,
  "height": 1000,
  "size": 59.97,
  "url": "/uploads/large_Xenon_83fc8ae3e9.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  String? path;
  int? width;
  int? height;
  double? size;
  String? url;

  StoresAttributesAvatarDataAttributesFormatsLarge({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.path,
    this.width,
    this.height,
    this.size,
    this.url,
  });
  StoresAttributesAvatarDataAttributesFormatsLarge.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    path = json['path']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['path'] = path;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['url'] = url;
    return data;
  }
}

class StoresAttributesAvatarDataAttributesFormatsThumbnail {
/*
{
  "name": "thumbnail_Xenon.jpg",
  "hash": "thumbnail_Xenon_83fc8ae3e9",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "path": null,
  "width": 156,
  "height": 156,
  "size": 3.38,
  "url": "/uploads/thumbnail_Xenon_83fc8ae3e9.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  String? path;
  int? width;
  int? height;
  double? size;
  String? url;

  StoresAttributesAvatarDataAttributesFormatsThumbnail({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.path,
    this.width,
    this.height,
    this.size,
    this.url,
  });
  StoresAttributesAvatarDataAttributesFormatsThumbnail.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    path = json['path']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['path'] = path;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['url'] = url;
    return data;
  }
}

class StoresAttributesAvatarDataAttributesFormats {
/*
{
  "thumbnail": {
    "name": "thumbnail_Xenon.jpg",
    "hash": "thumbnail_Xenon_83fc8ae3e9",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "path": null,
    "width": 156,
    "height": 156,
    "size": 3.38,
    "url": "/uploads/thumbnail_Xenon_83fc8ae3e9.jpg"
  },
  "large": {
    "name": "large_Xenon.jpg",
    "hash": "large_Xenon_83fc8ae3e9",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "path": null,
    "width": 999,
    "height": 1000,
    "size": 59.97,
    "url": "/uploads/large_Xenon_83fc8ae3e9.jpg"
  },
  "medium": {
    "name": "medium_Xenon.jpg",
    "hash": "medium_Xenon_83fc8ae3e9",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "path": null,
    "width": 750,
    "height": 750,
    "size": 38.79,
    "url": "/uploads/medium_Xenon_83fc8ae3e9.jpg"
  },
  "small": {
    "name": "small_Xenon.jpg",
    "hash": "small_Xenon_83fc8ae3e9",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "path": null,
    "width": 499,
    "height": 500,
    "size": 20.68,
    "url": "/uploads/small_Xenon_83fc8ae3e9.jpg"
  }
} 
*/

  StoresAttributesAvatarDataAttributesFormatsThumbnail? thumbnail;
  StoresAttributesAvatarDataAttributesFormatsLarge? large;
  StoresAttributesAvatarDataAttributesFormatsMedium? medium;
  StoresAttributesAvatarDataAttributesFormatsSmall? small;

  StoresAttributesAvatarDataAttributesFormats({
    this.thumbnail,
    this.large,
    this.medium,
    this.small,
  });
  StoresAttributesAvatarDataAttributesFormats.fromJson(
      Map<String, dynamic> json) {
    thumbnail = (json['thumbnail'] != null)
        ? StoresAttributesAvatarDataAttributesFormatsThumbnail.fromJson(
            json['thumbnail'])
        : null;
    large = (json['large'] != null)
        ? StoresAttributesAvatarDataAttributesFormatsLarge.fromJson(
            json['large'])
        : null;
    medium = (json['medium'] != null)
        ? StoresAttributesAvatarDataAttributesFormatsMedium.fromJson(
            json['medium'])
        : null;
    small = (json['small'] != null)
        ? StoresAttributesAvatarDataAttributesFormatsSmall.fromJson(
            json['small'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (thumbnail != null) {
      data['thumbnail'] = thumbnail!.toJson();
    }
    if (large != null) {
      data['large'] = large!.toJson();
    }
    if (medium != null) {
      data['medium'] = medium!.toJson();
    }
    if (small != null) {
      data['small'] = small!.toJson();
    }
    return data;
  }
}

class StoresAttributesAvatarDataAttributes {
/*
{
  "name": "Xenon.jpg",
  "alternativeText": "Xenon.jpg",
  "caption": "Xenon.jpg",
  "width": 1515,
  "height": 1516,
  "formats": {
    "thumbnail": {
      "name": "thumbnail_Xenon.jpg",
      "hash": "thumbnail_Xenon_83fc8ae3e9",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "path": null,
      "width": 156,
      "height": 156,
      "size": 3.38,
      "url": "/uploads/thumbnail_Xenon_83fc8ae3e9.jpg"
    },
    "large": {
      "name": "large_Xenon.jpg",
      "hash": "large_Xenon_83fc8ae3e9",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "path": null,
      "width": 999,
      "height": 1000,
      "size": 59.97,
      "url": "/uploads/large_Xenon_83fc8ae3e9.jpg"
    },
    "medium": {
      "name": "medium_Xenon.jpg",
      "hash": "medium_Xenon_83fc8ae3e9",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "path": null,
      "width": 750,
      "height": 750,
      "size": 38.79,
      "url": "/uploads/medium_Xenon_83fc8ae3e9.jpg"
    },
    "small": {
      "name": "small_Xenon.jpg",
      "hash": "small_Xenon_83fc8ae3e9",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "path": null,
      "width": 499,
      "height": 500,
      "size": 20.68,
      "url": "/uploads/small_Xenon_83fc8ae3e9.jpg"
    }
  },
  "hash": "Xenon_83fc8ae3e9",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "size": 88.89,
  "url": "/uploads/Xenon_83fc8ae3e9.jpg",
  "previewUrl": null,
  "provider": "local",
  "provider_metadata": null,
  "createdAt": "2023-01-16T17:38:05.381Z",
  "updatedAt": "2023-01-16T17:39:20.676Z"
} 
*/

  String? name;
  String? alternativeText;
  String? caption;
  int? width;
  int? height;
  StoresAttributesAvatarDataAttributesFormats? formats;
  String? hash;
  String? ext;
  String? mime;
  double? size;
  String? url;
  String? previewUrl;
  String? provider;
  String? providerMetadata;
  String? createdAt;
  String? updatedAt;

  StoresAttributesAvatarDataAttributes({
    this.name,
    this.alternativeText,
    this.caption,
    this.width,
    this.height,
    this.formats,
    this.hash,
    this.ext,
    this.mime,
    this.size,
    this.url,
    this.previewUrl,
    this.provider,
    this.providerMetadata,
    this.createdAt,
    this.updatedAt,
  });
  StoresAttributesAvatarDataAttributes.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    alternativeText = json['alternativeText']?.toString();
    caption = json['caption']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    formats = (json['formats'] != null)
        ? StoresAttributesAvatarDataAttributesFormats.fromJson(json['formats'])
        : null;
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
    previewUrl = json['previewUrl']?.toString();
    provider = json['provider']?.toString();
    providerMetadata = json['provider_metadata']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['alternativeText'] = alternativeText;
    data['caption'] = caption;
    data['width'] = width;
    data['height'] = height;
    if (formats != null) {
      data['formats'] = formats!.toJson();
    }
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['size'] = size;
    data['url'] = url;
    data['previewUrl'] = previewUrl;
    data['provider'] = provider;
    data['provider_metadata'] = providerMetadata;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}

class StoresAttributesAvatarData {
/*
{
  "id": 19,
  "attributes": {
    "name": "Xenon.jpg",
    "alternativeText": "Xenon.jpg",
    "caption": "Xenon.jpg",
    "width": 1515,
    "height": 1516,
    "formats": {
      "thumbnail": {
        "name": "thumbnail_Xenon.jpg",
        "hash": "thumbnail_Xenon_83fc8ae3e9",
        "ext": ".jpg",
        "mime": "image/jpeg",
        "path": null,
        "width": 156,
        "height": 156,
        "size": 3.38,
        "url": "/uploads/thumbnail_Xenon_83fc8ae3e9.jpg"
      },
      "large": {
        "name": "large_Xenon.jpg",
        "hash": "large_Xenon_83fc8ae3e9",
        "ext": ".jpg",
        "mime": "image/jpeg",
        "path": null,
        "width": 999,
        "height": 1000,
        "size": 59.97,
        "url": "/uploads/large_Xenon_83fc8ae3e9.jpg"
      },
      "medium": {
        "name": "medium_Xenon.jpg",
        "hash": "medium_Xenon_83fc8ae3e9",
        "ext": ".jpg",
        "mime": "image/jpeg",
        "path": null,
        "width": 750,
        "height": 750,
        "size": 38.79,
        "url": "/uploads/medium_Xenon_83fc8ae3e9.jpg"
      },
      "small": {
        "name": "small_Xenon.jpg",
        "hash": "small_Xenon_83fc8ae3e9",
        "ext": ".jpg",
        "mime": "image/jpeg",
        "path": null,
        "width": 499,
        "height": 500,
        "size": 20.68,
        "url": "/uploads/small_Xenon_83fc8ae3e9.jpg"
      }
    },
    "hash": "Xenon_83fc8ae3e9",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "size": 88.89,
    "url": "/uploads/Xenon_83fc8ae3e9.jpg",
    "previewUrl": null,
    "provider": "local",
    "provider_metadata": null,
    "createdAt": "2023-01-16T17:38:05.381Z",
    "updatedAt": "2023-01-16T17:39:20.676Z"
  }
} 
*/

  int? id;
  StoresAttributesAvatarDataAttributes? attributes;

  StoresAttributesAvatarData({
    this.id,
    this.attributes,
  });
  StoresAttributesAvatarData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    attributes = (json['attributes'] != null)
        ? StoresAttributesAvatarDataAttributes.fromJson(json['attributes'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    if (attributes != null) {
      data['attributes'] = attributes!.toJson();
    }
    return data;
  }
}

class StoresAttributesAvatar {
/*
{
  "data": {
    "id": 19,
    "attributes": {
      "name": "Xenon.jpg",
      "alternativeText": "Xenon.jpg",
      "caption": "Xenon.jpg",
      "width": 1515,
      "height": 1516,
      "formats": {
        "thumbnail": {
          "name": "thumbnail_Xenon.jpg",
          "hash": "thumbnail_Xenon_83fc8ae3e9",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "path": null,
          "width": 156,
          "height": 156,
          "size": 3.38,
          "url": "/uploads/thumbnail_Xenon_83fc8ae3e9.jpg"
        },
        "large": {
          "name": "large_Xenon.jpg",
          "hash": "large_Xenon_83fc8ae3e9",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "path": null,
          "width": 999,
          "height": 1000,
          "size": 59.97,
          "url": "/uploads/large_Xenon_83fc8ae3e9.jpg"
        },
        "medium": {
          "name": "medium_Xenon.jpg",
          "hash": "medium_Xenon_83fc8ae3e9",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "path": null,
          "width": 750,
          "height": 750,
          "size": 38.79,
          "url": "/uploads/medium_Xenon_83fc8ae3e9.jpg"
        },
        "small": {
          "name": "small_Xenon.jpg",
          "hash": "small_Xenon_83fc8ae3e9",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "path": null,
          "width": 499,
          "height": 500,
          "size": 20.68,
          "url": "/uploads/small_Xenon_83fc8ae3e9.jpg"
        }
      },
      "hash": "Xenon_83fc8ae3e9",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "size": 88.89,
      "url": "/uploads/Xenon_83fc8ae3e9.jpg",
      "previewUrl": null,
      "provider": "local",
      "provider_metadata": null,
      "createdAt": "2023-01-16T17:38:05.381Z",
      "updatedAt": "2023-01-16T17:39:20.676Z"
    }
  }
} 
*/

  StoresAttributesAvatarData? data;

  StoresAttributesAvatar({
    this.data,
  });
  StoresAttributesAvatar.fromJson(Map<String, dynamic> json) {
    data = (json['data'] != null)
        ? StoresAttributesAvatarData.fromJson(json['data'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}

class StoresAttributesProductsDataAttributes {
/*
{
  "model": "Gaming pulse GL66 12UEK",
  "createdAt": "2022-11-14T19:54:12.371Z",
  "updatedAt": "2022-11-15T19:59:20.846Z",
  "cpu_gen": "12",
  "price": "1400"
} 
*/

  String? model;
  String? createdAt;
  String? updatedAt;
  String? cpuGen;
  String? price;

  StoresAttributesProductsDataAttributes({
    this.model,
    this.createdAt,
    this.updatedAt,
    this.cpuGen,
    this.price,
  });
  StoresAttributesProductsDataAttributes.fromJson(Map<String, dynamic> json) {
    model = json['model']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    cpuGen = json['cpu_gen']?.toString();
    price = json['price']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['model'] = model;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['cpu_gen'] = cpuGen;
    data['price'] = price;
    return data;
  }
}

class StoresAttributesProductsData {
/*
{
  "id": 2,
  "attributes": {
    "model": "Gaming pulse GL66 12UEK",
    "createdAt": "2022-11-14T19:54:12.371Z",
    "updatedAt": "2022-11-15T19:59:20.846Z",
    "cpu_gen": "12",
    "price": "1400"
  }
} 
*/

  int? id;
  StoresAttributesProductsDataAttributes? attributes;

  StoresAttributesProductsData({
    this.id,
    this.attributes,
  });
  StoresAttributesProductsData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    attributes = (json['attributes'] != null)
        ? StoresAttributesProductsDataAttributes.fromJson(json['attributes'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    if (attributes != null) {
      data['attributes'] = attributes!.toJson();
    }
    return data;
  }
}

class StoresAttributesProducts {
/*
{
  "data": [
    {
      "id": 2,
      "attributes": {
        "model": "Gaming pulse GL66 12UEK",
        "createdAt": "2022-11-14T19:54:12.371Z",
        "updatedAt": "2022-11-15T19:59:20.846Z",
        "cpu_gen": "12",
        "price": "1400"
      }
    }
  ]
} 
*/

  List<StoresAttributesProductsData?>? data;

  StoresAttributesProducts({
    this.data,
  });
  StoresAttributesProducts.fromJson(Map<String, dynamic> json) {
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <StoresAttributesProductsData>[];
      v.forEach((v) {
        arr0.add(StoresAttributesProductsData.fromJson(v));
      });
      this.data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    return data;
  }
}

class StoresAttributes {
/*
{
  "name": "Xenon",
  "location": "Sana'a",
  "email": "Xenon@gmail.com",
  "phone": "777415208",
  "Description": "ok",
  "Link": "https://www.facebook.com/Xenonyemen.777415208?mibextid=ZbWKwL",
  "username": "Xenon",
  "createdAt": "2022-11-14T19:55:48.101Z",
  "updatedAt": "2023-01-16T17:41:08.028Z",
  "products": {
    "data": [
      {
        "id": 2,
        "attributes": {
          "model": "Gaming pulse GL66 12UEK",
          "createdAt": "2022-11-14T19:54:12.371Z",
          "updatedAt": "2022-11-15T19:59:20.846Z",
          "cpu_gen": "12",
          "price": "1400"
        }
      }
    ]
  },
  "avatar": {
    "data": {
      "id": 19,
      "attributes": {
        "name": "Xenon.jpg",
        "alternativeText": "Xenon.jpg",
        "caption": "Xenon.jpg",
        "width": 1515,
        "height": 1516,
        "formats": {
          "thumbnail": {
            "name": "thumbnail_Xenon.jpg",
            "hash": "thumbnail_Xenon_83fc8ae3e9",
            "ext": ".jpg",
            "mime": "image/jpeg",
            "path": null,
            "width": 156,
            "height": 156,
            "size": 3.38,
            "url": "/uploads/thumbnail_Xenon_83fc8ae3e9.jpg"
          },
          "large": {
            "name": "large_Xenon.jpg",
            "hash": "large_Xenon_83fc8ae3e9",
            "ext": ".jpg",
            "mime": "image/jpeg",
            "path": null,
            "width": 999,
            "height": 1000,
            "size": 59.97,
            "url": "/uploads/large_Xenon_83fc8ae3e9.jpg"
          },
          "medium": {
            "name": "medium_Xenon.jpg",
            "hash": "medium_Xenon_83fc8ae3e9",
            "ext": ".jpg",
            "mime": "image/jpeg",
            "path": null,
            "width": 750,
            "height": 750,
            "size": 38.79,
            "url": "/uploads/medium_Xenon_83fc8ae3e9.jpg"
          },
          "small": {
            "name": "small_Xenon.jpg",
            "hash": "small_Xenon_83fc8ae3e9",
            "ext": ".jpg",
            "mime": "image/jpeg",
            "path": null,
            "width": 499,
            "height": 500,
            "size": 20.68,
            "url": "/uploads/small_Xenon_83fc8ae3e9.jpg"
          }
        },
        "hash": "Xenon_83fc8ae3e9",
        "ext": ".jpg",
        "mime": "image/jpeg",
        "size": 88.89,
        "url": "/uploads/Xenon_83fc8ae3e9.jpg",
        "previewUrl": null,
        "provider": "local",
        "provider_metadata": null,
        "createdAt": "2023-01-16T17:38:05.381Z",
        "updatedAt": "2023-01-16T17:39:20.676Z"
      }
    }
  },
  "cover": {
    "data": {
      "id": 20,
      "attributes": {
        "name": "Xenon_Cover.jpg",
        "alternativeText": "Xenon_Cover.jpg",
        "caption": "Xenon_Cover.jpg",
        "width": 832,
        "height": 320,
        "formats": {
          "thumbnail": {
            "name": "thumbnail_Xenon_Cover.jpg",
            "hash": "thumbnail_Xenon_Cover_3d50192fb0",
            "ext": ".jpg",
            "mime": "image/jpeg",
            "path": null,
            "width": 245,
            "height": 94,
            "size": 3.87,
            "url": "/uploads/thumbnail_Xenon_Cover_3d50192fb0.jpg"
          },
          "medium": {
            "name": "medium_Xenon_Cover.jpg",
            "hash": "medium_Xenon_Cover_3d50192fb0",
            "ext": ".jpg",
            "mime": "image/jpeg",
            "path": null,
            "width": 750,
            "height": 288,
            "size": 18.53,
            "url": "/uploads/medium_Xenon_Cover_3d50192fb0.jpg"
          },
          "small": {
            "name": "small_Xenon_Cover.jpg",
            "hash": "small_Xenon_Cover_3d50192fb0",
            "ext": ".jpg",
            "mime": "image/jpeg",
            "path": null,
            "width": 500,
            "height": 192,
            "size": 10.28,
            "url": "/uploads/small_Xenon_Cover_3d50192fb0.jpg"
          }
        },
        "hash": "Xenon_Cover_3d50192fb0",
        "ext": ".jpg",
        "mime": "image/jpeg",
        "size": 17.41,
        "url": "/uploads/Xenon_Cover_3d50192fb0.jpg",
        "previewUrl": null,
        "provider": "local",
        "provider_metadata": null,
        "createdAt": "2023-01-16T17:40:54.474Z",
        "updatedAt": "2023-01-16T17:40:54.474Z"
      }
    }
  }
} 
*/

  String? name;
  String? location;
  String? email;
  String? phone;
  String? Description;
  String? Link;
  String? username;
  String? createdAt;
  String? updatedAt;
  StoresAttributesProducts? products;
  StoresAttributesAvatar? avatar;
  StoresAttributesCover? cover;

  StoresAttributes({
    this.name,
    this.location,
    this.email,
    this.phone,
    this.Description,
    this.Link,
    this.username,
    this.createdAt,
    this.updatedAt,
    this.products,
    this.avatar,
    this.cover,
  });
  StoresAttributes.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    location = json['location']?.toString();
    email = json['email']?.toString();
    phone = json['phone']?.toString();
    Description = json['Description']?.toString();
    Link = json['Link']?.toString();
    username = json['username']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    products = (json['products'] != null)
        ? StoresAttributesProducts.fromJson(json['products'])
        : null;
    avatar = (json['avatar'] != null)
        ? StoresAttributesAvatar.fromJson(json['avatar'])
        : null;
    cover = (json['cover'] != null)
        ? StoresAttributesCover.fromJson(json['cover'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['location'] = location;
    data['email'] = email;
    data['phone'] = phone;
    data['Description'] = Description;
    data['Link'] = Link;
    data['username'] = username;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (products != null) {
      data['products'] = products!.toJson();
    }
    if (avatar != null) {
      data['avatar'] = avatar!.toJson();
    }
    if (cover != null) {
      data['cover'] = cover!.toJson();
    }
    return data;
  }
}

class Stores {
/*
{
  "id": 1,
  "attributes": {
    "name": "Xenon",
    "location": "Sana'a",
    "email": "Xenon@gmail.com",
    "phone": "777415208",
    "Description": "ok",
    "Link": "https://www.facebook.com/Xenonyemen.777415208?mibextid=ZbWKwL",
    "username": "Xenon",
    "createdAt": "2022-11-14T19:55:48.101Z",
    "updatedAt": "2023-01-16T17:41:08.028Z",
    "products": {
      "data": [
        {
          "id": 2,
          "attributes": {
            "model": "Gaming pulse GL66 12UEK",
            "createdAt": "2022-11-14T19:54:12.371Z",
            "updatedAt": "2022-11-15T19:59:20.846Z",
            "cpu_gen": "12",
            "price": "1400"
          }
        }
      ]
    },
    "avatar": {
      "data": {
        "id": 19,
        "attributes": {
          "name": "Xenon.jpg",
          "alternativeText": "Xenon.jpg",
          "caption": "Xenon.jpg",
          "width": 1515,
          "height": 1516,
          "formats": {
            "thumbnail": {
              "name": "thumbnail_Xenon.jpg",
              "hash": "thumbnail_Xenon_83fc8ae3e9",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "path": null,
              "width": 156,
              "height": 156,
              "size": 3.38,
              "url": "/uploads/thumbnail_Xenon_83fc8ae3e9.jpg"
            },
            "large": {
              "name": "large_Xenon.jpg",
              "hash": "large_Xenon_83fc8ae3e9",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "path": null,
              "width": 999,
              "height": 1000,
              "size": 59.97,
              "url": "/uploads/large_Xenon_83fc8ae3e9.jpg"
            },
            "medium": {
              "name": "medium_Xenon.jpg",
              "hash": "medium_Xenon_83fc8ae3e9",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "path": null,
              "width": 750,
              "height": 750,
              "size": 38.79,
              "url": "/uploads/medium_Xenon_83fc8ae3e9.jpg"
            },
            "small": {
              "name": "small_Xenon.jpg",
              "hash": "small_Xenon_83fc8ae3e9",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "path": null,
              "width": 499,
              "height": 500,
              "size": 20.68,
              "url": "/uploads/small_Xenon_83fc8ae3e9.jpg"
            }
          },
          "hash": "Xenon_83fc8ae3e9",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "size": 88.89,
          "url": "/uploads/Xenon_83fc8ae3e9.jpg",
          "previewUrl": null,
          "provider": "local",
          "provider_metadata": null,
          "createdAt": "2023-01-16T17:38:05.381Z",
          "updatedAt": "2023-01-16T17:39:20.676Z"
        }
      }
    },
    "cover": {
      "data": {
        "id": 20,
        "attributes": {
          "name": "Xenon_Cover.jpg",
          "alternativeText": "Xenon_Cover.jpg",
          "caption": "Xenon_Cover.jpg",
          "width": 832,
          "height": 320,
          "formats": {
            "thumbnail": {
              "name": "thumbnail_Xenon_Cover.jpg",
              "hash": "thumbnail_Xenon_Cover_3d50192fb0",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "path": null,
              "width": 245,
              "height": 94,
              "size": 3.87,
              "url": "/uploads/thumbnail_Xenon_Cover_3d50192fb0.jpg"
            },
            "medium": {
              "name": "medium_Xenon_Cover.jpg",
              "hash": "medium_Xenon_Cover_3d50192fb0",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "path": null,
              "width": 750,
              "height": 288,
              "size": 18.53,
              "url": "/uploads/medium_Xenon_Cover_3d50192fb0.jpg"
            },
            "small": {
              "name": "small_Xenon_Cover.jpg",
              "hash": "small_Xenon_Cover_3d50192fb0",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "path": null,
              "width": 500,
              "height": 192,
              "size": 10.28,
              "url": "/uploads/small_Xenon_Cover_3d50192fb0.jpg"
            }
          },
          "hash": "Xenon_Cover_3d50192fb0",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "size": 17.41,
          "url": "/uploads/Xenon_Cover_3d50192fb0.jpg",
          "previewUrl": null,
          "provider": "local",
          "provider_metadata": null,
          "createdAt": "2023-01-16T17:40:54.474Z",
          "updatedAt": "2023-01-16T17:40:54.474Z"
        }
      }
    }
  }
} 
*/

  int? id;
  StoresAttributes? attributes;

  Stores({
    this.id,
    this.attributes,
  });
  Stores.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    attributes = (json['attributes'] != null)
        ? StoresAttributes.fromJson(json['attributes'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    if (attributes != null) {
      data['attributes'] = attributes!.toJson();
    }
    return data;
  }
}
